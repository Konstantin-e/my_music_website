{"ast":null,"code":"var _jsxFileName = \"/Users/konstantine/Desktop/My Page/Sass/my_music_website/react/koi-music/src/components/MusicSection.js\";\nimport React from 'react';\nimport Track from './Track';\nimport songs from '../songs';\n\nclass MusicSection extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSetSrc = id => {\n      return () => {\n        console.log(songs[id].src);\n        this.setState({\n          src: songs[id].src\n        }); // console.log(this.state.src)\n        // if (this.player.current.src || this.player.current.paused) {\n        //   this.player.current.play()\n        // } else {\n\n        this.player.current.pause(); // }\n      };\n    };\n\n    this.state = {\n      src: \"\"\n    };\n    this.player = React.createRef();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.src !== prevState.src) {\n      if (this.player.current.paused) {\n        this.player.current.play();\n      }\n    }\n  }\n\n  render() {\n    const list = songs.map((item, index) => {\n      return /*#__PURE__*/React.createElement(Track, {\n        key: index,\n        id: index,\n        setSrc: this.handleSetSrc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tracks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      ref: this.player,\n      src: this.state.src,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), list);\n  }\n\n}\n\nexport default MusicSection;","map":{"version":3,"sources":["/Users/konstantine/Desktop/My Page/Sass/my_music_website/react/koi-music/src/components/MusicSection.js"],"names":["React","Track","songs","MusicSection","Component","constructor","handleSetSrc","id","console","log","src","setState","player","current","pause","state","createRef","componentDidUpdate","prevProps","prevState","paused","play","render","list","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiBdC,YAjBc,GAiBEC,EAAD,IAAQ;AACrB,aAAO,MAAM;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACK,EAAD,CAAL,CAAUG,GAAtB;AACA,aAAKC,QAAL,CAAc;AACZD,UAAAA,GAAG,EAAER,KAAK,CAACK,EAAD,CAAL,CAAUG;AADH,SAAd,EAFW,CAKX;AACA;AACA;AACA;;AACE,aAAKE,MAAL,CAAYC,OAAZ,CAAoBC,KAApB,GATS,CAUX;AACD,OAXD;AAYD,KA9Ba;;AAEZ,SAAKC,KAAL,GAAa;AACXL,MAAAA,GAAG,EAAE;AADM,KAAb;AAIA,SAAKE,MAAL,GAAcZ,KAAK,CAACgB,SAAN,EAAd;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAwB;AACxC,QAAG,KAAKJ,KAAL,CAAWL,GAAX,KAAmBS,SAAS,CAACT,GAAhC,EAAqC;AACnC,UAAI,KAAKE,MAAL,CAAYC,OAAZ,CAAoBO,MAAxB,EAAgC;AAC9B,aAAKR,MAAL,CAAYC,OAAZ,CAAoBQ,IAApB;AACD;AACF;AACF;;AAkBDC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAGrB,KAAK,CAACsB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtC,0BACE,oBAAC,KAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,EAAE,EAAEA,KAFN;AAGE,QAAA,MAAM,EAAE,KAAKpB,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARY,CAAb;AASA,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAE,KAAKM,MADZ;AAEE,MAAA,GAAG,EAAE,KAAKG,KAAL,CAAWL,GAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMGa,IANH,CADF;AAWD;;AAvDwC;;AA0D3C,eAAepB,YAAf","sourcesContent":["import React from 'react'\nimport Track from './Track'\nimport songs from '../songs'\n\nclass MusicSection extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      src: \"\"\n    }\n\n    this.player = React.createRef()\n  }\n\n  componentDidUpdate(prevProps, prevState ) {\n    if(this.state.src !== prevState.src) {\n      if (this.player.current.paused) {\n        this.player.current.play()\n      }\n    }\n  }\n\n  handleSetSrc = (id) => {\n    return () => {\n      console.log(songs[id].src)\n      this.setState({\n        src: songs[id].src\n      })\n      // console.log(this.state.src)\n      // if (this.player.current.src || this.player.current.paused) {\n      //   this.player.current.play()\n      // } else {\n        this.player.current.pause()\n      // }\n    }\n  }\n\n\n  render() {\n    const list = songs.map((item, index) => {\n      return(\n        <Track \n          key={index}\n          id={index}\n          setSrc={this.handleSetSrc}\n        />\n      )\n    })\n    return(\n      <div className=\"tracks\" >\n        <audio \n          ref={this.player}\n          src={this.state.src}\n        />\n        \n        {list}\n        \n      </div>\n    )\n  }\n}\n\nexport default MusicSection"]},"metadata":{},"sourceType":"module"}