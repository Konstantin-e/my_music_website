{"ast":null,"code":"import React from'react';function Track(props){function convertToTime(num){num=num*1000;//ms\nvar date=new Date(num);// if (props.duration - props.currentTime < 1 || !props.currentTime) {return \"0:00\"}\nreturn date.getMinutes()+':'+(date.getSeconds()<10?\"0\"+date.getSeconds():date.getSeconds());}return/*#__PURE__*/React.createElement(\"div\",{className:\"player\"},/*#__PURE__*/React.createElement(\"div\",{className:\"song-title\"},props.title),/*#__PURE__*/React.createElement(\"div\",{className:\"bg\",onClick:props.setSrc(props.id)},/*#__PURE__*/React.createElement(\"div\",{className:!props.paused&&props.id===props.currentTrackNumber?\"playing\":\"paused\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"progress-container\"},/*#__PURE__*/React.createElement(\"div\",null,props.currentTime&&props.id===props.currentTrackNumber?convertToTime(props.currentTime):null),/*#__PURE__*/React.createElement(\"progress\",{onClick:function onClick(event){if(props.id===props.currentTrackNumber){var amount=event.pageX-event.target.offsetLeft;amount=amount*props.duration/200;props.scrubberClick(amount);}},className:\"scrubber\",value:props.duration&&props.currentTime?100*props.currentTime/props.duration:0,max:\"100\"}),/*#__PURE__*/React.createElement(\"div\",null,props.duration&&!props.ended&&props.id===props.currentTrackNumber?convertToTime(props.duration):null)));}export default Track;","map":{"version":3,"sources":["/Users/konstantine/Desktop/My Page/Sass/my_music_website/src/components/Track.js"],"names":["React","Track","props","convertToTime","num","date","Date","getMinutes","getSeconds","title","setSrc","id","paused","currentTrackNumber","currentTime","event","amount","pageX","target","offsetLeft","duration","scrubberClick","ended"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CAEpB,QAASC,CAAAA,aAAT,CAAuBC,GAAvB,CAA4B,CAC1BA,GAAG,CAAGA,GAAG,CAAG,IAAZ,CAAiB;AACjB,GAAIC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAASF,GAAT,CAAX,CACA;AACA,MAAOC,CAAAA,IAAI,CAACE,UAAL,GAAoB,GAApB,EAA2BF,IAAI,CAACG,UAAL,GAAoB,EAApB,CAAyB,IAAMH,IAAI,CAACG,UAAL,EAA/B,CAAmDH,IAAI,CAACG,UAAL,EAA9E,CAAP,CACD,CAED,mBACE,2BAAK,SAAS,CAAC,QAAf,eACE,2BAAK,SAAS,CAAC,YAAf,EAA6BN,KAAK,CAACO,KAAnC,CADF,cAEE,2BAAK,SAAS,CAAC,IAAf,CAAoB,OAAO,CAAEP,KAAK,CAACQ,MAAN,CAAaR,KAAK,CAACS,EAAnB,CAA7B,eACE,2BAAK,SAAS,CAAE,CAACT,KAAK,CAACU,MAAP,EAAiBV,KAAK,CAACS,EAAN,GAAaT,KAAK,CAACW,kBAApC,CAAyD,SAAzD,CAAqE,QAArF,EADF,CAFF,cAOE,2BAAK,SAAS,CAAC,oBAAf,eACE,+BAAMX,KAAK,CAACY,WAAN,EAAqBZ,KAAK,CAACS,EAAN,GAAaT,KAAK,CAACW,kBAAxC,CAA6DV,aAAa,CAACD,KAAK,CAACY,WAAP,CAA1E,CAAgG,IAAtG,CADF,cAEE,gCACE,OAAO,CAAE,iBAACC,KAAD,CAAW,CAClB,GAAIb,KAAK,CAACS,EAAN,GAAaT,KAAK,CAACW,kBAAvB,CAA2C,CACzC,GAAIG,CAAAA,MAAM,CAAGD,KAAK,CAACE,KAAN,CAAcF,KAAK,CAACG,MAAN,CAAaC,UAAxC,CACAH,MAAM,CAAGA,MAAM,CAAGd,KAAK,CAACkB,QAAf,CAA0B,GAAnC,CACAlB,KAAK,CAACmB,aAAN,CAAoBL,MAApB,EACD,CACF,CAPH,CAQE,SAAS,CAAC,UARZ,CASE,KAAK,CACHd,KAAK,CAACkB,QAAN,EAAkBlB,KAAK,CAACY,WAAxB,CACA,IAAMZ,KAAK,CAACY,WAAZ,CAA0BZ,KAAK,CAACkB,QADhC,CAC2C,CAX/C,CAaE,GAAG,CAAC,KAbN,EAFF,cAiBE,+BAAOlB,KAAK,CAACkB,QAAN,EAAkB,CAAClB,KAAK,CAACoB,KAAzB,EAAkCpB,KAAK,CAACS,EAAN,GAAaT,KAAK,CAACW,kBAAtD,CACLV,aAAa,CAACD,KAAK,CAACkB,QAAP,CADR,CAC2B,IADjC,CAjBF,CAPF,CADF,CAiCD,CAED,cAAenB,CAAAA,KAAf","sourcesContent":["import React from 'react'\n\nfunction Track(props) {\n\n  function convertToTime(num) {\n    num = num * 1000 //ms\n    let date = new Date(num)\n    // if (props.duration - props.currentTime < 1 || !props.currentTime) {return \"0:00\"}\n    return date.getMinutes() + ':' + (date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds())\n  }\n\n  return(\n    <div className=\"player\">\n      <div className=\"song-title\">{props.title}</div>\n      <div className=\"bg\" onClick={props.setSrc(props.id)}>\n        <div className={!props.paused && props.id === props.currentTrackNumber ? \"playing\" : \"paused\"}>\n          \n        </div>\n      </div>\n      <div className=\"progress-container\">\n        <div>{props.currentTime && props.id === props.currentTrackNumber ? convertToTime(props.currentTime) : null}</div>\n        <progress \n          onClick={(event) => {\n            if (props.id === props.currentTrackNumber) {\n              let amount = event.pageX - event.target.offsetLeft\n              amount = amount * props.duration / 200\n              props.scrubberClick(amount)\n            }\n          }}\n          className=\"scrubber\" \n          value={\n            props.duration && props.currentTime ?\n            100 * props.currentTime / props.duration : 0\n          } \n          max=\"100\" \n        /> \n        <div>{(props.duration && !props.ended && props.id === props.currentTrackNumber) ?\n         convertToTime(props.duration) : null}\n        </div>\n      </div>\n    </div>\n  )\n\n  \n}\n\nexport default Track\n"]},"metadata":{},"sourceType":"module"}