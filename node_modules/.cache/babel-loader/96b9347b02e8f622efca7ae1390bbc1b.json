{"ast":null,"code":"console.log(\"koi_music online\");\nlet bg = document.getElementsByClassName(\"bg\");\nlet tracks = document.getElementsByTagName(\"audio\"); // const trackNames = [\"Deep.mp3\", \"Dog's Tail.mp3\", \"Into the Night.mp3\", \"Paprika.mp3\"];\n\nlet scrubberIds = [];\nlet scrubbers = document.getElementsByClassName(\"scrubber\"); // function toggleX(x) {\n//   x.classList.toggle(\"change\");\n//   document.getElementById(\"navigation\").classList.toggle(\"shrinked\");\n// }\n// mouse hover for tracks ----------------------------------------\n\nfor (let i = 0; i < bg.length; i++) {\n  bg[i].setAttribute(\"onmouseover\", \"hoveraudio(this)\");\n  bg[i].setAttribute(\"onmouseout\", \"hoveraudio(this)\");\n} // function hoveraudio(elem) {\n//     if (elem.firstElementChild.style.borderLeft == \"50px solid rgb(251, 175, 0)\") {\n//       elem.firstElementChild.style.borderLeft = \"50px solid white\";\n//     } else {\n//       // elem.firstElementChild.style.borderLeft = \"50px solid #FBAF00\";\n//     }\n// }\n// mouse hover for tracks end ----------------------------------------\n// audio ----------------------------------------\n//add play\n\n\nfor (let i = 0; i < bg.length; i++) {\n  bg[i].addEventListener(\"click\", () => {\n    if (tracks[i].paused === true) {\n      for (let j = 0; j < tracks.length; j++) {\n        tracks[j].pause();\n      }\n\n      tracks[i].play();\n      barStart(tracks[i], i);\n    } else {\n      // console.log(tracks[i]);\n      tracks[i].pause(); // barStop();\n    } // console.log(bg[i].firstChild.nextSibling.classList.contains(\"play\"));\n\n\n    bg[i].firstChild.nextSibling.classList.toggle(\"paused\");\n\n    for (let j = 0; j < tracks.length; j++) {\n      if (bg[j].firstChild.nextSibling.classList.contains(\"playing\")) {\n        //if something is playing turn it off\n        bg[j].firstChild.nextSibling.classList.toggle(\"playing\");\n        bg[j].firstChild.nextSibling.classList.toggle(\"paused\");\n      }\n    }\n\n    bg[i].firstChild.nextSibling.classList.toggle(\"playing\"); //then turn on selected track\n\n    if (tracks[i].paused === true) {\n      //if the track audio is paused switch class to paused\n      bg[i].firstChild.nextSibling.classList.toggle(\"playing\");\n      bg[i].firstChild.nextSibling.classList.toggle(\"paused\");\n    } // if (bg[i].firstChild.nextSibling.classList.value == \"playing\") {\n    //   bg[i].insertAdjacentElement(\"afterend\", canv);\n    //   drawAudio(\"audio/\"+trackNames[i]);\n    // }\n\n  });\n} // progress bar\n\n\nfunction barStart(track, index) {\n  scrubberIds[index] = setInterval(frame, 100); //creates an id with respect to track number\n\n  function frame() {\n    if (track.ended || track.paused === true) {\n      clearInterval(scrubberIds[index]);\n    } else {\n      // console.log(track.currentTime);\n      scrubbers[index].setAttribute(\"value\", 100 * track.currentTime / track.duration);\n    }\n  }\n}\n\nfor (let i = 0; i < scrubbers.length; i++) {\n  scrubbers[i].addEventListener(\"click\", progressLocation);\n}\n\nfunction progressLocation(event) {\n  let relativeTrack = event.srcElement.previousElementSibling.firstElementChild.firstElementChild;\n  let duration = relativeTrack.duration;\n  let scrollAmount = event.pageX - event.srcElement.offsetLeft; // max is width of .bg = 200\n\n  relativeTrack.currentTime = scrollAmount * duration / 200;\n} // ---------------------------------------------------------------","map":{"version":3,"sources":["/Users/konstantine/Desktop/My Page/Sass/my_music_website/react/koi-music/src/main.js"],"names":["console","log","bg","document","getElementsByClassName","tracks","getElementsByTagName","scrubberIds","scrubbers","i","length","setAttribute","addEventListener","paused","j","pause","play","barStart","firstChild","nextSibling","classList","toggle","contains","track","index","setInterval","frame","ended","clearInterval","currentTime","duration","progressLocation","event","relativeTrack","srcElement","previousElementSibling","firstElementChild","scrollAmount","pageX","offsetLeft"],"mappings":"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","sourcesContent":["console.log(\"koi_music online\");\n\nlet bg = document.getElementsByClassName(\"bg\");\nlet tracks = document.getElementsByTagName(\"audio\");\n// const trackNames = [\"Deep.mp3\", \"Dog's Tail.mp3\", \"Into the Night.mp3\", \"Paprika.mp3\"];\nlet scrubberIds = [];\nlet scrubbers = document.getElementsByClassName(\"scrubber\");\n\n\n\n\n// function toggleX(x) {\n//   x.classList.toggle(\"change\");\n//   document.getElementById(\"navigation\").classList.toggle(\"shrinked\");\n// }\n\n// mouse hover for tracks ----------------------------------------\n\nfor (let i = 0; i < bg.length; i++) {\n  bg[i].setAttribute(\"onmouseover\", \"hoveraudio(this)\");\n  bg[i].setAttribute(\"onmouseout\", \"hoveraudio(this)\");\n}\n\n// function hoveraudio(elem) {\n\n//     if (elem.firstElementChild.style.borderLeft == \"50px solid rgb(251, 175, 0)\") {\n//       elem.firstElementChild.style.borderLeft = \"50px solid white\";\n//     } else {\n//       // elem.firstElementChild.style.borderLeft = \"50px solid #FBAF00\";\n//     }\n// }\n\n// mouse hover for tracks end ----------------------------------------\n\n\n// audio ----------------------------------------\n\n//add play\nfor (let i = 0; i < bg.length; i++) {\n  bg[i].addEventListener(\"click\", () => {\n    if (tracks[i].paused === true) {\n      for (let j = 0; j < tracks.length; j++) {\n        tracks[j].pause();\n      }\n      tracks[i].play();\n      barStart(tracks[i], i);\n    } else {\n      // console.log(tracks[i]);\n      tracks[i].pause();\n      // barStop();\n    }\n    // console.log(bg[i].firstChild.nextSibling.classList.contains(\"play\"));\n    bg[i].firstChild.nextSibling.classList.toggle(\"paused\"); \n    for (let j = 0; j < tracks.length; j++) {\n      if (bg[j].firstChild.nextSibling.classList.contains(\"playing\")) {  //if something is playing turn it off\n        bg[j].firstChild.nextSibling.classList.toggle(\"playing\"); \n        bg[j].firstChild.nextSibling.classList.toggle(\"paused\");\n      }\n    }\n    bg[i].firstChild.nextSibling.classList.toggle(\"playing\");  //then turn on selected track\n    if (tracks[i].paused === true) { //if the track audio is paused switch class to paused\n        bg[i].firstChild.nextSibling.classList.toggle(\"playing\"); \n        bg[i].firstChild.nextSibling.classList.toggle(\"paused\");\n    }\n    // if (bg[i].firstChild.nextSibling.classList.value == \"playing\") {\n    //   bg[i].insertAdjacentElement(\"afterend\", canv);\n    //   drawAudio(\"audio/\"+trackNames[i]);\n    // }\n  } );\n}\n\n// progress bar\nfunction barStart(track, index) {\n   \n  scrubberIds[index] = setInterval(frame, 100); //creates an id with respect to track number\n\n  function frame() {\n    if (track.ended || track.paused === true) {\n      clearInterval(scrubberIds[index]);\n    } else {\n      // console.log(track.currentTime);\n        scrubbers[index].setAttribute(\"value\", 100*track.currentTime/track.duration);\n    }\n  }\n}\n\n\nfor (let i = 0; i < scrubbers.length; i++) {\n  scrubbers[i].addEventListener(\"click\", progressLocation);\n}\n\nfunction progressLocation(event) {\n\n  let relativeTrack = event.srcElement.previousElementSibling.firstElementChild.firstElementChild;\n  let duration = relativeTrack.duration;\n  let scrollAmount = event.pageX - event.srcElement.offsetLeft; // max is width of .bg = 200\n  relativeTrack.currentTime = scrollAmount * duration / 200;\n}\n\n\n// ---------------------------------------------------------------\n\n"]},"metadata":{},"sourceType":"module"}