{"ast":null,"code":"var _jsxFileName = \"/Users/konstantine/Desktop/My Page/Sass/my_music_website/react/koi-music/src/components/MusicSection.js\";\nimport React from 'react';\nimport Track from './Track';\nimport songs from '../songs';\n\nclass MusicSection extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSetSrc = id => {\n      return () => {\n        this.setState({\n          src: songs[id].src,\n          currentTrackNumber: id\n        }, () => {\n          //when done setting state do this\n          if (this.player.current.paused) {\n            this.player.current.play();\n            this.setState({\n              paused: false\n            });\n          } else {\n            this.player.current.pause();\n            this.setState({\n              paused: true\n            });\n          }\n        });\n      };\n    };\n\n    this.handleTimeUpdate = event => {\n      let updatedCurrentTime = [...this.state.currentTime];\n      updatedCurrentTime[this.state.currentTrackNumber] = event.target.currentTime;\n      this.setState({\n        currentTime: updatedCurrentTime\n      });\n    };\n\n    this.handleDurationChange = () => {\n      this.setState({\n        duration: this.player.current.duration\n      });\n    };\n\n    this.state = {\n      src: \"\",\n      paused: true,\n      duration: [],\n      currentTrackNumber: \"\",\n      currentTime: []\n    };\n    this.player = React.createRef();\n  }\n\n  render() {\n    const list = songs.map((item, index) => {\n      return /*#__PURE__*/React.createElement(Track, {\n        currentTime: this.state.currentTime,\n        currentTrackNumber: this.state.currentTrackNumber,\n        paused: this.state.paused,\n        duration: this.state.duration,\n        title: this.state.title,\n        key: index,\n        id: index,\n        setSrc: this.handleSetSrc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tracks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      ref: this.player,\n      src: this.state.src,\n      onTimeUpdate: this.handleTimeUpdate,\n      onDurationChange: this.handleDurationChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), list);\n  }\n\n}\n\nexport default MusicSection;","map":{"version":3,"sources":["/Users/konstantine/Desktop/My Page/Sass/my_music_website/react/koi-music/src/components/MusicSection.js"],"names":["React","Track","songs","MusicSection","Component","constructor","handleSetSrc","id","setState","src","currentTrackNumber","player","current","paused","play","pause","handleTimeUpdate","event","updatedCurrentTime","state","currentTime","target","handleDurationChange","duration","createRef","render","list","map","item","index","title"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Track from './Track'\nimport songs from '../songs'\n\nclass MusicSection extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      src: \"\",\n      paused: true,\n      duration: [],\n      currentTrackNumber: \"\",\n      currentTime: []\n    }\n\n    this.player = React.createRef()\n  }\n\n\n  handleSetSrc = (id) => {\n    return () => {\n      this.setState({\n        src: songs[id].src,\n        currentTrackNumber: id,\n      }, () => { //when done setting state do this\n        if (this.player.current.paused) {\n          this.player.current.play()\n          this.setState({\n            paused: false,\n          })\n        } else {\n          this.player.current.pause()\n          this.setState({\n            paused: true,\n          })\n        }\n      }) \n    }\n  } \n\n  handleTimeUpdate = (event) => {\n    let updatedCurrentTime = [...this.state.currentTime]\n    updatedCurrentTime[this.state.currentTrackNumber] = event.target.currentTime\n    this.setState({\n      currentTime: updatedCurrentTime\n    })\n  }\n\n  handleDurationChange = () => {\n    this.setState({\n      duration: this.player.current.duration\n    })\n  }\n\n  render() {\n    const list = songs.map((item, index) => {\n      return(\n        <Track \n          currentTime={this.state.currentTime}\n          currentTrackNumber={this.state.currentTrackNumber}\n          paused={this.state.paused}\n          duration={this.state.duration}\n          title={this.state.title}\n          key={index}\n          id={index}\n          setSrc={this.handleSetSrc}\n        />\n      )\n    })\n    return(\n      <div className=\"tracks\" >\n        <audio \n          ref={this.player}\n          src={this.state.src}\n          onTimeUpdate={this.handleTimeUpdate}\n          onDurationChange={this.handleDurationChange}\n        />\n        \n        {list}\n        \n      </div>\n    )\n  }\n}\n\nexport default MusicSection"]},"metadata":{},"sourceType":"module"}