{"ast":null,"code":"var _jsxFileName = \"/Users/konstantine/Desktop/My Page/Sass/my_music_website/react/koi-music/src/components/MusicSection.js\";\nimport React from 'react';\nimport Track from './Track';\nimport songs from '../songs';\n\nclass MusicSection extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSetSrc = id => {\n      return () => {\n        this.setState({\n          src: songs[id].src,\n          currentTrackNumber: id\n        }, () => {\n          //when done setting state do this\n          if (this.state.paused) {\n            if (this.state.currentTime[id]) {\n              //if current time was set. otherwise start from 0\n              this.player.current.currentTime = this.state.currentTime[id]; //start from where stopped last time\n            }\n\n            this.player.current.play();\n          } else {\n            this.player.current.pause();\n          }\n        });\n      };\n    };\n\n    this.handleScrubberClick = amount => {\n      this.player.current.currentTime = amount;\n    };\n\n    this.handleChange = event => {\n      const {\n        paused,\n        currentTime,\n        src,\n        duration\n      } = event.target;\n      let index = this.state.currentTrackNumber;\n      let updatedCurrentTime = [...this.state.currentTime];\n      updatedCurrentTime[index] = currentTime;\n      let updatedDuartion = [...this.state.duration];\n      updatedDuartion[this.state.currentTrackNumber] = this.player.current.duration;\n      this.setState({\n        paused: paused,\n        src: src,\n        duration: updatedDuartion,\n        currentTime: updatedCurrentTime\n      });\n    };\n\n    this.state = {\n      src: \"\",\n      paused: true,\n      duration: [],\n      currentTrackNumber: \"\",\n      currentTime: []\n    };\n    this.player = React.createRef();\n  }\n\n  render() {\n    const list = songs.map((item, index) => {\n      return /*#__PURE__*/React.createElement(Track, {\n        currentTime: this.state.currentTime[index],\n        currentTrackNumber: this.state.currentTrackNumber,\n        paused: this.state.paused,\n        duration: this.state.duration[index],\n        title: this.state.title,\n        key: index,\n        id: index,\n        setSrc: this.handleSetSrc,\n        scrubberClick: this.handleScrubberClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tracks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      currentTime: this.state.currentTime,\n      ref: this.player,\n      src: this.state.src,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), list);\n  }\n\n}\n\nexport default MusicSection;","map":{"version":3,"sources":["/Users/konstantine/Desktop/My Page/Sass/my_music_website/react/koi-music/src/components/MusicSection.js"],"names":["React","Track","songs","MusicSection","Component","constructor","handleSetSrc","id","setState","src","currentTrackNumber","state","paused","currentTime","player","current","play","pause","handleScrubberClick","amount","handleChange","event","duration","target","index","updatedCurrentTime","updatedDuartion","createRef","render","list","map","item","title"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Track from './Track'\nimport songs from '../songs'\n\nclass MusicSection extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      src: \"\",\n      paused: true,\n      duration: [],\n      currentTrackNumber: \"\",\n      currentTime: []\n    }\n\n    this.player = React.createRef()\n  }\n\n  handleSetSrc = (id) => {\n    return () => {\n      this.setState({\n        src: songs[id].src,\n        currentTrackNumber: id,\n      }, () => { //when done setting state do this\n        if (this.state.paused) {\n          if (this.state.currentTime[id]) { //if current time was set. otherwise start from 0\n            this.player.current.currentTime = this.state.currentTime[id] //start from where stopped last time\n          }\n          this.player.current.play()\n        } else {\n          this.player.current.pause()\n        }\n      }) \n    }\n  } \n\n  handleScrubberClick = (amount) => {\n    this.player.current.currentTime = amount\n  }\n\n  handleChange = (event) => {\n    const { paused, currentTime, src, duration} = event.target\n\n    let index = this.state.currentTrackNumber\n    let updatedCurrentTime = [...this.state.currentTime]\n    updatedCurrentTime[index] = currentTime\n\n    let updatedDuartion = [...this.state.duration]\n    updatedDuartion[this.state.currentTrackNumber] = this.player.current.duration\n\n    this.setState({\n      paused: paused,\n      src: src,\n      duration: updatedDuartion,\n      currentTime: updatedCurrentTime,\n    })\n  }\n\n  render() {\n    const list = songs.map((item, index) => {\n      return(\n        <Track \n          currentTime={this.state.currentTime[index]}\n          currentTrackNumber={this.state.currentTrackNumber}\n          paused={this.state.paused}\n          duration={this.state.duration[index]}\n          title={this.state.title}\n          key={index}\n          id={index}\n          setSrc={this.handleSetSrc}\n          scrubberClick={this.handleScrubberClick}\n        />\n      )\n    })\n    return(\n      <div className=\"tracks\" >\n        <audio \n          currentTime={this.state.currentTime}\n          ref={this.player}\n          src={this.state.src}\n          onChange={this.handleChange}\n        />\n        \n        {list}\n        \n      </div>\n    )\n  }\n}\n\nexport default MusicSection"]},"metadata":{},"sourceType":"module"}