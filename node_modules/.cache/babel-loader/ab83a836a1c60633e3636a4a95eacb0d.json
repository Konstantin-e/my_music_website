{"ast":null,"code":"var _jsxFileName = \"/Users/konstantine/Desktop/My Page/Sass/my_music_website/react/koi-music/src/components/Track.js\";\nimport React from 'react';\n\nfunction Track(props) {\n  for (let i = 0; i < scrubbers.length; i++) {\n    scrubbers[i].addEventListener(\"click\", progressLocation);\n  }\n\n  function progressLocation(event) {\n    let relativeTrack = event.srcElement.previousElementSibling.firstElementChild.firstElementChild;\n    let duration = relativeTrack.duration;\n    let scrollAmount = event.pageX - event.srcElement.offsetLeft; // max is width of .bg = 200\n\n    relativeTrack.currentTime = scrollAmount * duration / 200;\n  }\n\n  if (!props.paused && props.id === props.currentTrackNumber) {\n    let scrubberId = setInterval(frame, 100);\n\n    function frame() {\n      if (props.currentTime === props.duration || track.paused) {\n        clearInterval(scrubberId);\n      } else {\n        scrubbers[index].setAttribute(\"value\", 100 * track.currentTime / track.duration);\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg\",\n    onClick: props.setSrc(props.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: !props.paused && props.id === props.currentTrackNumber ? \"playing\" : \"paused\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"progress\", {\n    className: \"scrubber\",\n    value: props.duration && props.currentTime ? 100 * props.currentTime / props.duration : 0,\n    max: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Track;","map":{"version":3,"sources":["/Users/konstantine/Desktop/My Page/Sass/my_music_website/react/koi-music/src/components/Track.js"],"names":["React","Track","props","i","scrubbers","length","addEventListener","progressLocation","event","relativeTrack","srcElement","previousElementSibling","firstElementChild","duration","scrollAmount","pageX","offsetLeft","currentTime","paused","id","currentTrackNumber","scrubberId","setInterval","frame","track","clearInterval","index","setAttribute","setSrc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEpB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzCC,IAAAA,SAAS,CAACD,CAAD,CAAT,CAAaG,gBAAb,CAA8B,OAA9B,EAAuCC,gBAAvC;AACD;;AAED,WAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AAE/B,QAAIC,aAAa,GAAGD,KAAK,CAACE,UAAN,CAAiBC,sBAAjB,CAAwCC,iBAAxC,CAA0DA,iBAA9E;AACA,QAAIC,QAAQ,GAAGJ,aAAa,CAACI,QAA7B;AACA,QAAIC,YAAY,GAAGN,KAAK,CAACO,KAAN,GAAcP,KAAK,CAACE,UAAN,CAAiBM,UAAlD,CAJ+B,CAI+B;;AAC9DP,IAAAA,aAAa,CAACQ,WAAd,GAA4BH,YAAY,GAAGD,QAAf,GAA0B,GAAtD;AACD;;AAED,MAAI,CAACX,KAAK,CAACgB,MAAP,IAAiBhB,KAAK,CAACiB,EAAN,KAAajB,KAAK,CAACkB,kBAAxC,EAA4D;AAC1D,QAAIC,UAAU,GAAGC,WAAW,CAACC,KAAD,EAAQ,GAAR,CAA5B;;AAEA,aAASA,KAAT,GAAiB;AACf,UAAIrB,KAAK,CAACe,WAAN,KAAsBf,KAAK,CAACW,QAA5B,IAAwCW,KAAK,CAACN,MAAlD,EAA0D;AACxDO,QAAAA,aAAa,CAACJ,UAAD,CAAb;AACD,OAFD,MAEO;AACHjB,QAAAA,SAAS,CAACsB,KAAD,CAAT,CAAiBC,YAAjB,CAA8B,OAA9B,EAAuC,MAAIH,KAAK,CAACP,WAAV,GAAsBO,KAAK,CAACX,QAAnE;AACH;AACF;AACF;;AAID,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,IAAf;AAAoB,IAAA,OAAO,EAAEX,KAAK,CAAC0B,MAAN,CAAa1B,KAAK,CAACiB,EAAnB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE,CAACjB,KAAK,CAACgB,MAAP,IAAiBhB,KAAK,CAACiB,EAAN,KAAajB,KAAK,CAACkB,kBAApC,GAAyD,SAAzD,GAAqE,QAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAMI;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EACHlB,KAAK,CAACW,QAAN,IAAkBX,KAAK,CAACe,WAAxB,GACA,MAAMf,KAAK,CAACe,WAAZ,GAA0Bf,KAAK,CAACW,QADhC,GAC2C,CAJ/C;AAME,IAAA,GAAG,EAAC,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADF;AAkBD;;AAED,eAAeZ,KAAf","sourcesContent":["import React from 'react'\n\nfunction Track(props) {\n\n  for (let i = 0; i < scrubbers.length; i++) {\n    scrubbers[i].addEventListener(\"click\", progressLocation);\n  }\n  \n  function progressLocation(event) {\n  \n    let relativeTrack = event.srcElement.previousElementSibling.firstElementChild.firstElementChild;\n    let duration = relativeTrack.duration;\n    let scrollAmount = event.pageX - event.srcElement.offsetLeft; // max is width of .bg = 200\n    relativeTrack.currentTime = scrollAmount * duration / 200;\n  }\n\n  if (!props.paused && props.id === props.currentTrackNumber) {\n    let scrubberId = setInterval(frame, 100);\n\n    function frame() {\n      if (props.currentTime === props.duration || track.paused) {\n        clearInterval(scrubberId);\n      } else {\n          scrubbers[index].setAttribute(\"value\", 100*track.currentTime/track.duration);\n      }\n    }\n  }\n\n  \n\n  return(\n    <div className=\"player\">\n      <div className=\"bg\" onClick={props.setSrc(props.id)}>\n        <div className={!props.paused && props.id === props.currentTrackNumber ? \"playing\" : \"paused\"}>\n          \n        </div>\n      </div>\n        <progress \n          className=\"scrubber\" \n          value={\n            props.duration && props.currentTime ?\n            100 * props.currentTime / props.duration : 0\n          } \n          max=\"100\" />\n    </div>\n  )\n\n  \n}\n\nexport default Track"]},"metadata":{},"sourceType":"module"}